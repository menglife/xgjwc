<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xzit.ssm.mapper.CheckmessageMapper">
  <resultMap id="BaseResultMap" type="com.xzit.ssm.entity.Checkmessage">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="xyid" jdbcType="INTEGER" property="xyid" />
    <result column="kcid" jdbcType="INTEGER" property="kcid" />
    <result column="kclx" jdbcType="VARCHAR" property="kclx" />
    <result column="msg" jdbcType="VARCHAR" property="msg" />
    <result column="handle" jdbcType="VARCHAR" property="handle" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, xyid, kcid, kclx, msg, handle
  </sql>
  <select id="selectByExample" parameterType="com.xzit.ssm.entity.CheckmessageExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from checkmessage
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from checkmessage
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from checkmessage
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xzit.ssm.entity.CheckmessageExample">
    delete from checkmessage
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xzit.ssm.entity.Checkmessage">
    insert into checkmessage (id, xyid, kcid, 
      kclx, msg, handle)
    values (#{id,jdbcType=INTEGER}, #{xyid,jdbcType=INTEGER}, #{kcid,jdbcType=INTEGER}, 
      #{kclx,jdbcType=VARCHAR}, #{msg,jdbcType=VARCHAR}, #{handle,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xzit.ssm.entity.Checkmessage">
    insert into checkmessage
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="xyid != null">
        xyid,
      </if>
      <if test="kcid != null">
        kcid,
      </if>
      <if test="kclx != null">
        kclx,
      </if>
      <if test="msg != null">
        msg,
      </if>
      <if test="handle != null">
        handle,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="xyid != null">
        #{xyid,jdbcType=INTEGER},
      </if>
      <if test="kcid != null">
        #{kcid,jdbcType=INTEGER},
      </if>
      <if test="kclx != null">
        #{kclx,jdbcType=VARCHAR},
      </if>
      <if test="msg != null">
        #{msg,jdbcType=VARCHAR},
      </if>
      <if test="handle != null">
        #{handle,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xzit.ssm.entity.CheckmessageExample" resultType="java.lang.Long">
    select count(*) from checkmessage
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update checkmessage
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.xyid != null">
        xyid = #{record.xyid,jdbcType=INTEGER},
      </if>
      <if test="record.kcid != null">
        kcid = #{record.kcid,jdbcType=INTEGER},
      </if>
      <if test="record.kclx != null">
        kclx = #{record.kclx,jdbcType=VARCHAR},
      </if>
      <if test="record.msg != null">
        msg = #{record.msg,jdbcType=VARCHAR},
      </if>
      <if test="record.handle != null">
        handle = #{record.handle,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update checkmessage
    set id = #{record.id,jdbcType=INTEGER},
      xyid = #{record.xyid,jdbcType=INTEGER},
      kcid = #{record.kcid,jdbcType=INTEGER},
      kclx = #{record.kclx,jdbcType=VARCHAR},
      msg = #{record.msg,jdbcType=VARCHAR},
      handle = #{record.handle,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xzit.ssm.entity.Checkmessage">
    update checkmessage
    <set>
      <if test="xyid != null">
        xyid = #{xyid,jdbcType=INTEGER},
      </if>
      <if test="kcid != null">
        kcid = #{kcid,jdbcType=INTEGER},
      </if>
      <if test="kclx != null">
        kclx = #{kclx,jdbcType=VARCHAR},
      </if>
      <if test="msg != null">
        msg = #{msg,jdbcType=VARCHAR},
      </if>
      <if test="handle != null">
        handle = #{handle,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xzit.ssm.entity.Checkmessage">
    update checkmessage
    set xyid = #{xyid,jdbcType=INTEGER},
      kcid = #{kcid,jdbcType=INTEGER},
      kclx = #{kclx,jdbcType=VARCHAR},
      msg = #{msg,jdbcType=VARCHAR},
      handle = #{handle,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>